{"filter":false,"title":"user.rb","tooltip":"/association_tutorial/app/models/user.rb","undoManager":{"mark":10,"position":10,"stack":[[{"start":{"row":4,"column":50},"end":{"row":5,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":5,"column":0},"end":{"row":5,"column":9},"action":"insert","lines":["         "]}],[{"start":{"row":5,"column":8},"end":{"row":5,"column":9},"action":"remove","lines":[" "],"id":3},{"start":{"row":5,"column":6},"end":{"row":5,"column":8},"action":"remove","lines":["  "]},{"start":{"row":5,"column":4},"end":{"row":5,"column":6},"action":"remove","lines":["  "]},{"start":{"row":5,"column":2},"end":{"row":5,"column":4},"action":"remove","lines":["  "]}],[{"start":{"row":5,"column":2},"end":{"row":5,"column":19},"action":"insert","lines":["has_many :tweets "],"id":4}],[{"start":{"row":5,"column":18},"end":{"row":5,"column":19},"action":"remove","lines":[" "],"id":5},{"start":{"row":5,"column":18},"end":{"row":6,"column":0},"action":"insert","lines":["",""]},{"start":{"row":6,"column":0},"end":{"row":6,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":6,"column":2},"end":{"row":6,"column":21},"action":"insert","lines":["has_many :favorites"],"id":6}],[{"start":{"row":6,"column":21},"end":{"row":7,"column":0},"action":"insert","lines":["",""],"id":7},{"start":{"row":7,"column":0},"end":{"row":7,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":7,"column":2},"end":{"row":7,"column":65},"action":"insert","lines":["has_many :favorite_tweets, through: :favorites, source: :tweet "],"id":8}],[{"start":{"row":7,"column":65},"end":{"row":8,"column":0},"action":"insert","lines":["",""],"id":9},{"start":{"row":8,"column":0},"end":{"row":8,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":8,"column":2},"end":{"row":9,"column":0},"action":"insert","lines":["",""],"id":10},{"start":{"row":9,"column":0},"end":{"row":9,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":9,"column":2},"end":{"row":26,"column":5},"action":"insert","lines":["# ====================自分がフォローしているユーザーとの関連 ===================================","  #フォローする側のUserから見て、フォローされる側のUserを(中間テーブルを介して)集める。なので親はfollowing_id(フォローする側)","  has_many :active_relationships, class_name: \"Relationship\", foreign_key: :following_id","  # 中間テーブルを介して「follower」モデルのUser(フォローされた側)を集めることを「followings」と定義","  has_many :followings, through: :active_relationships, source: :follower","  # ========================================================================================","","  # ====================自分がフォローされるユーザーとの関連 ===================================","  #フォローされる側のUserから見て、フォローしてくる側のUserを(中間テーブルを介して)集める。なので親はfollower_id(フォローされる側)","  has_many :passive_relationships, class_name: \"Relationship\", foreign_key: :follower_id","  # 中間テーブルを介して「following」モデルのUser(フォローする側)を集めることを「followers」と定義","  has_many :followers, through: :passive_relationships, source: :following","  # =======================================================================================","","  def followed_by?(user)","    # 今自分(引数のuser)がフォローしようとしているユーザー(レシーバー)がフォローされているユーザー(つまりpassive)の中から、引数に渡されたユーザー(自分)がいるかどうかを調べる","    passive_relationships.find_by(following_id: user.id).present?","  end"],"id":11}],[{"start":{"row":26,"column":5},"end":{"row":27,"column":0},"action":"insert","lines":["",""],"id":12},{"start":{"row":27,"column":0},"end":{"row":27,"column":2},"action":"insert","lines":["  "]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":27,"column":2},"end":{"row":27,"column":2},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1648651926264,"hash":"5c80d8a195554d4eed2fa2d49af0e581178c1057"}